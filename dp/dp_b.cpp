/* 
*******************************************************************************
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠦⠹⣿⣷⡌⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠛⣉⣠⣤⣶⣾⣶⣤⣼⣿⣷⠀⣄⣈⣉⠙⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢻⣿⣿⣿⣿⣿⣷⣦⡀⠙⠻⠿⠛⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣁⣴⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠸⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⢶⡆⠀⠀⠀⠈⠉⠉⠛⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢁⣴⣿⠃⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⢻⣿⣿⣿⣿⣿⣿⣿⣧⠀⠘⣿⡖⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⠋⣰⣿⣿⡇⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠘⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠈⢿⡶⠀⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⠟⠁⣼⣿⣿⣿⠀⣼⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⠀⣿⣿⣿⡆⠸⣿⣿⣿⣿⣿⣧⠸⣿⣧⡀⠈⢶⣶⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⠿⠟⠋⠁⢀⣾⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⡏⢸⣿⣿⣇⠸⣿⣿⣿⡄⢻⣿⣿⣿⣿⣿⡄⢿⣿⣷⣄⠀⠑⢶⡆⢰⣿⣿⣿⣿⣿⣿⣿⣿
⡏⠀⠀⠀⠀⠀⣾⣿⡿⣿⣾⣿⡄⢹⣿⣿⣿⣿⣿⣿⡇⠘⣿⣿⣿⡄⢻⣿⣿⣿⡀⢿⣿⣿⣿⣿⣇⢸⣿⣿⣿⣧⢀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿
⣧⠀⠀⠀⠀⣸⣿⣿⠁⣿⣿⣿⡇⠘⣿⣿⣿⣿⣿⣿⣷⠀⠙⣿⣿⣷⡀⠻⣿⣿⣷⡈⢿⣿⣿⣿⣿⠈⣿⣿⣿⣿⡈⢿⣦⡀⠈⢿⣿⣿⣿⣿⣿⣿⣿
⣿⡄⠀⠀⢰⣿⡟⢿⡄⣿⣿⣿⡇⠀⠙⢿⣿⣿⣿⣿⣿⡀⢶⡈⢻⣿⣧⡀⠙⢿⣿⣷⡈⢿⣿⣿⣿⡄⣿⣿⣿⣿⣷⠐⣿⣷⡄⠈⢿⣿⣿⣿⣿⣿⣿
⣿⣧⠀⢀⣿⣿⠇⣿⠇⢸⣿⣿⡇⢸⣷⡈⠻⢿⣿⣿⣿⡅⠸⣿⣦⡙⠻⣷⡈⢆⡙⢿⣷⠈⣿⣿⣿⡇⢸⣿⣿⣿⣿⣇⠸⣿⣿⣆⠈⢽⣿⣿⣿⣿⣿
⣿⣿⠇⢸⣿⣿⢐⡟⠀⡀⢻⣿⡇⢸⣿⣿⣷⣤⣉⠙⠻⠿⠆⠀⢬⣌⣱⣤⣍⣀⡙⠂⠉⠃⠸⣿⣿⡇⢸⣿⣿⣿⣿⣿⡄⢻⣿⣻⡄⠘⣿⣿⣿⣿⣿
⣿⡟⠀⣿⣿⣿⢸⠃⣰⣿⣄⠹⡧⠘⠋⣩⣴⣿⣿⣿⣿⣶⣾⣶⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⢾⣿⡇⢸⣿⣿⣿⣿⣿⣧⠈⣾⣿⣷⠀⠸⣿⣿⣿⣿
⣿⠃⢠⣿⣿⣿⠀⢠⣿⣿⣿⣦⣌⣚⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠟⠛⠛⠃⢸⣿⡇⢸⣿⣿⣿⣿⣿⢷⡆⢸⣿⣿⢠⡀⠹⣿⣿⣿
⡿⠀⢸⣿⣿⣿⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⢛⡉⠁⠀⠀⠰⢎⣀⠸⣿⡇⢸⣿⣿⣿⣿⣿⣽⣧⠘⣿⣿⠘⣇⠀⢿⣿⣿
⡇⠀⡜⣿⣿⣿⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⠐⣊⣉⣤⣶⣾⣿⣿⣿⣿⡀⣿⡇⢸⣿⣿⣿⣿⣾⣿⣿⡄⣿⣿⠀⣿⠀⠘⣿⣿
⠇⢰⡆⣿⣿⣿⡀⢸⣿⣿⣿⠟⠛⠉⠁⠀⠄⠀⢀⣩⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⡿⣿⠿⣿⡇⢿⡇⣿⣿⣿⣿⣿⣿⣿⣿⡇⢹⣿⢀⡏⢰⠀⢿⣿
⠀⢸⡇⢻⣿⣿⡇⠀⡿⠋⠠⠞⢂⣠⣤⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⢹⣇⠨⣄⣨⣄⣸⡇⢸⠇⣾⣿⣿⣿⣷⣿⣿⣿⡇⢸⣿⢸⡇⣸⡇⠘⣿
⠀⢺⣧⠸⣿⣿⣿⠀⢧⣤⣶⣾⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⡷⢸⠀⣿⣿⣿⣿⣯⣿⣿⣿⡇⢸⡟⠼⢀⣿⣿⠀⣿
⠀⡈⢿⡆⢻⣿⣿⡆⢸⣿⣿⠇⢹⣉⣻⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⢉⣼⣿⣿⣿⣿⣿⡇⠘⢸⣿⣿⣿⣿⣟⣿⣿⣿⡇⢸⣧⠃⣼⣿⣿⡄⢻
⠀⣷⠘⣷⡈⣿⣿⣷⠀⣿⣿⣷⣿⣿⣿⣿⡿⣿⣿⡿⠿⠛⣋⣩⡥⠖⣂⣴⣿⣿⣿⣿⣿⣿⣿⣿⠀⣾⣿⣿⣿⣿⣿⢿⣿⣿⠇⣿⠏⣰⣿⣿⣿⡃⢸
⠀⣿⣧⠸⣧⠘⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣶⣤⣤⣈⣩⣭⣭⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⡾⢰⣿⣿⣿⣿⣿⣿⣻⣿⣿⢀⡏⣠⣿⣿⣿⣿⠀⢻
⠀⢻⣿⣧⠙⣧⠸⣿⣷⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠋⣁⣴⡿⠂⢸⣿⣿⣿⣿⣿⣿⣿⣿⡗⢈⣴⣿⣿⣿⣿⣿⠀⣿
⡇⠘⣿⣿⣧⡘⢧⡘⢿⣧⣄⣉⡛⠛⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿⠿⠿⠟⠋⠁⣠⣴⡿⠟⣉⡄⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣼⣿⣿⣿⣿⣿⠏⢰⣿
⣿⡀⢹⣿⣿⢷⡌⠻⣎⠻⣿⣿⣿⣿⣿⠂⣶⣶⡶⠶⣦⡀⠶⣶⣄⠀⢀⣴⡿⠟⣩⣴⣾⣿⠁⣾⣿⣿⣿⣿⣿⣿⣿⣿⠍⢠⣿⣿⣿⣿⣿⠟⢠⣿⣿
⣿⣷⡀⢻⣯⠘⣿⣦⡙⢷⣿⣿⣿⣿⣿⡄⠹⣿⣿⣦⡙⠿⣶⣌⡛⠧⠘⣉⣴⣾⣿⣿⣿⠏⢀⣿⣿⣿⣿⣿⣿⣿⡿⠟⣀⣼⣿⣿⣿⡿⠋⣠⣾⣿⣿
⣿⣿⣷⡀⠻⡀⠘⢿⣿⣤⡙⠻⣿⣿⣿⡇⠀⠈⠻⢿⣿⣶⣌⣉⠉⣡⣾⣿⣿⣿⡿⠟⠁⠀⣿⣿⣿⣿⣿⣿⠟⠋⢰⣾⣿⣿⡿⠟⢋⣠⣾⣿⣿⣿⣿
⣿⣿⣿⣿⣄⠁⠀⠤⠙⠻⣿⣷⣤⣍⣙⠻⠀⢸⣷⣦⣤⣉⣉⡉⠀⣿⣿⣿⡿⠋⠀⠀⠀⠐⠿⠿⠛⠛⠉⠀⠀⠀⠀⢤⣤⣴⣶⣶⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣧⠄⠈⠻⠦⢤⣉⣙⠛⠛⠻⠇⠈⢻⣿⣿⣿⡟⣰⠄⣿⠟⠁⠀⠀⠀
********************************************************************************

***
Link: https://atcoder.jp/contests/dp/tasks/dp_b
****

N stones [1,2,3,...,N] for i belongs (1 <= i <= N)
for i+1 or i + 2 or i+3 .. i+K; cost [hi - hj] is
Find mininum possible cost frog reaches stone N.


5 3
10 30 40 50 20


*/
#include<bits/stdc++.h>
using namespace std;

#define fio         ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define int 		long long
#define pb  		push_back
#define ppb 		pop_back
#define pf 			push_front
#define ppf 		pop_front
#define all(x) 		(x).begin(),(x).end()
#define fr 			first 
#define sc 			second 
#define rep(i,a,b)	for(int i=a;i<b;i++)
#define gcd(a, b)   __gcd(a, b);
using ii = pair<int,int>;
typedef pair<int,int> pii;
typedef pair<int, string> pis;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<ii> VII;
typedef vector<VI> VVI;
typedef map<int,int> MPII;
typedef set<int> SETI;
typedef multiset<int> MSETI;

int n,k;

void solve() {
    cin>>n>>k;
    vector<int> h(n);
    for(int i=0;i<n;i++){
        cin>>h[i];
    }

    // cout<<dp[0][1];

    vector<int> dp(n,0);
    for(int i=1; i<n;i++){
        dp[i] = INT_MAX;
        for(int j=1; j<=k; j++){
            if(i - j < 0) break;
            dp[i] = min(dp[i], dp[i-j] + abs(h[i] - h[i-j]));
        }
    }
    cout<<dp[n-1]<<endl;

    return;
}


signed main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);

#ifndef ONLINE_JUDGE
    freopen("../input.txt","r",stdin);
    freopen("../output.txt","w",stdout);
#endif 

    // int t;cin>>t;
    int t = 1;
    while(t--){
        solve();
    }
}